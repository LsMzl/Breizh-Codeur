{#
Cette balise <form> définit un formulaire qui envoie une requête POST à l'URL générée par la fonction url('admin_blog_delete', {id: post.id}). 
Cela signifie qu'une fois que le formulaire est soumis, il enverra une requête POST à l'URL spécifiée, 
en passant l'identifiant de l'article à supprimer en tant que paramètre.

L'attribut onsubmit="confirm('supprimez ?')" affiche une boîte de dialogue de confirmation lors de la soumission du formulaire, 
demandant à l'utilisateur de confirmer s'il souhaite vraiment supprimer l'article.

L'attribut id="delete-form" est utilisé pour identifier ce formulaire dans le code JavaScript, par exemple pour y attacher des événements.  #}
<form 
  action="{{ url('admin_blog_delete_comment', { id: comment.id }) }}" 
  id="delete-form" 
  method="POST"
  onsubmit="confirm('Etes-vous sûr de vouloir supprimer ce commentaire ?')"
  >
  <input type="hidden" name="_method" value="DELETE">
  <input type="hidden" name="token" value="{{ csrf_token('delete') }}">

  {# 
  Cet input de type "hidden" est utilisé pour envoyer la méthode HTTP DELETE au serveur. Dans Symfony, 
  la méthode DELETE n'est pas prise en charge par les formulaires HTML standard, 
  donc cette méthode est simulée en envoyant une requête POST avec cette valeur "_method" définie à "DELETE". 
  Cela permet d'indiquer au serveur que la demande est une suppression. #}

  {# 
  Cet input de type "hidden" contient un jeton CSRF (Cross-Site Request Forgery) généré par Symfony. 
  Il est utilisé pour prévenir les attaques CSRF en s'assurant que la requête provient bien du formulaire affiché 
  par l'application Symfony et non d'un site tiers malveillant. #}
  <button 
    type="submit" 
    class="btn btn-sm btn-danger rounded" 
    href="{{ url('admin_blog_delete_comment', { id: comment.id}) }}"
    >
      <i class="bi bi-trash-fill fs-6" aria-hidden="true"></i>
      Supprimer
  </button>
</form>